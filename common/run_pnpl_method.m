function [is_fail, R1, t1, tcost] = run_pnpl_method(method, XXw, xxn, v, f, ...
                                                    Cu, cov, Sigmas3D, ...
                                                    avg_depth, R_est, t_est, ...
                                                    xx_s_n, xx_e_n, ...
                                                    XXw_s, XXw_e, ll, ...
                                                    Sigmas3DLines, sigmas2dlines)
    is_fail = false;
    R1 = zeros(3, 3);
    t1 = zeros(3, 1);
    tcost = 0;
    try
        timer_method = tic;
        if strcmp(method.name, 'CEPPnP')                    
            [R1,t1]= method.f(XXw,xxn/f,Cu);
        elseif contains(method.name, 'MLPnP') ...
               || strcmp(method.name, 'MLPnPWithCov')                     
            [R1,t1]= method.f(XXw, v, cov);                    
        elseif (contains(method.name, 'DLSU*')) ...
               || (contains(method.name, 'EPnPU*'))                    
            [R1,t1] = method.f(XXw, xxn/f, Sigmas3D, Cu, ...
                              R_est, t_est, [], [], [], [], [], 1);              
        elseif (contains(method.name, 'DLSU') ...
               || contains(method.name, 'EPnPU'))                                                           
            [R1,t1]= method.f(XXw, xxn/f, Sigmas3D, Cu, ...
                              [], avg_depth, [], [], [], [], []);                                                                            
        elseif (strcmp(method.name, 'EPnPL')) ...
               || (strcmp(method.name, 'OPnPL'))
            [R1,t1] = method.f(XXw, xxn/f, xx_s_n/f, xx_e_n/f, ...
                               XXw_s, XXw_e, ll);       
        elseif (strcmp(method.name, 'DLSLU')) ...
               || (strcmp(method.name, 'EPnPLU'))
            [R1,t1] = method.f(XXw, xxn/f, Sigmas3D, Cu, ...
                               [], avg_depth, XXw_s, XXw_e, ll, ...
                               Sigmas3DLines, sigmas2dlines);
        elseif (strcmp(method.name, 'DLSLU*')) ...
               || (strcmp(method.name, 'EPnPLU*'))
            [R1,t1] = method.f(XXw, xxn/f, Sigmas3D, Cu, ...
                               R_est, t_est, XXw_s, XXw_e, ll, ...
                               Sigmas3DLines, sigmas2dlines, 1);                           
        elseif (contains(method.name, 'P3P'))                             
            R1 = R_est;
            t1 = t_est;                                               
        else                    
            [R1,t1] = method.f(XXw,xxn/f);                    
        end
        tcost = toc(timer_method);
    catch
        disp(['The solver - ',method.name,...
              ' - encounters internal errors\n']);
        is_fail = true;
        return;
    end

    %no solution
    if size(t1,2) < 1
        disp(['The solver - ',method.name,...
              ' - returns no solution\n']);
        is_fail = true;
        return;
    elseif (sum(sum(sum(imag(R1).^2))>0) == size(R1,3) ...
            || sum(sum(imag(t1(:,:,1)).^2)>0) == size(t1,2))
        disp(['The solver - ',method.name,...
              ' - returns complex solution\n']);
        is_fail = true;
        return;
    end
end